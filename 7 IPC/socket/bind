1 TCP中 客户端 bind
端口：如果在TCP连接中 客户端一头使用bind，则表示将发送进程必须绑定到某一个端口，从该端口发送的数据才能到达服务器端，实际上是对发送方的一个限制
IP：为发出的IP数据报分配源IP地址

2 bind在 两端中的作用
端口：
	#客户端：指定端口进行通讯
	#服务端：在建立与客户端的连接前，指定运行在某一个端口在其上接收数据
	
IP：
	#服务端：绑定socket只接受 目的地址为此IP的客户端连接
	

3 实例
	# 3.1 udp_client使用connect
		connet会先绑定远端 server的IP地址和端口，先建立一条连接
		然后直接通过 send传输数据包
		同时，在connect完成后可以直接用write/read函数
		
		
		 -----
		 UDP是无连接的，connect在调用时没有向外发包只是在协议栈中记录了状态，生成一个类似TCB的结构
		 之后如果发生网络异常，比如对端不可达：客户端在往对端写数据后，本机会收到一个ICMP回应，则回来的ICMP不可达的响应能够被协议栈处理，通知客户端进程
		 而不调用connect时，对于返回的ICMP响应，协议栈不知道该传递给上层的哪个应用，所以客户端进程中捕获不到相应的错误
		 在两种情况下，write或者sendto操作都是把数据放到协议栈的发送队列之后就返回成功，而相应的ICMP回应则要等数据到达对端后才能返回，所以通常这种情况叫做“异步错误”
		 -----
	
	# 3.2 udp_client使用bind
		laddr绑定本地 IP和端口
		raddr绑定服务器IP和端口，sendto发送数据包
		（connect中相当于做了sendto中的一部分，不过connect建立了一条专用连接
	
	# 3.3 udp_server使用connect
		 
