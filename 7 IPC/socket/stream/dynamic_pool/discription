// 动态进程池

进程池中最少10个进程，最多200个进程
为防止突发式多个连接，池中最少10进程
不停fork后，假设到达200上限后面请求就等待资源抢占进程
在大量访问结束后，200个进程处于空闲状态。这是需要从池中销毁进程，回到进程池最小进程数量

进阶：分布式系统中负载均衡 ， 中继引擎 ， IO多路复用


// server.c

首先创建MINSPARESERVER个进程，5个
在创建这5个进程的过程中accept阻塞等待连接
当有连接到来时，建立连接。同时保证最少有MINSPARESERVER个空闲accept连接

每当进程建立连接或者释放连接后都会向父进程（管理进程）发送SIG_NOTIFY信号，同时修改全局状态
父进程接收到信号后，根据全局状态进行创建新的空闲连接或者删除多余的空闲连接
（其中：当子进程数达到上限MAXCLIENT后，父进程创建进程是失败的，add_1_server()函数返回-1）

所以当连接达到最大数量后后续的连接只能等待
